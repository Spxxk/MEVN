{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000';\nexport default {\n  name: 'EventDetailView',\n  data() {\n    return {\n      lat: 43.6532,\n      lng: -79.3832\n    };\n  },\n  async mounted() {\n    try {\n      const response = await axios.get(`${API_URL}/event/${this.$route.params.game}/`, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log(\"response:\", response);\n      this.lat = response.data[0][\"latitude\"];\n      this.lng = response.data[0][\"longitude\"];\n      if (!window.google) {\n        console.log(\"loding map\");\n        this.loadMap();\n      } else {\n        // console.log(\"jh test: \", response.data[0], lat);\n        console.log(\"init maps\");\n        this.initMap();\n      }\n    } catch (error) {\n      console.error('Error fetching games:', error);\n    }\n  },\n  methods: {\n    loadMap() {\n      window.initMap = this.initMap.bind(this);\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyC1J8rbjY3B-Y-dzoWU7jl6hAW4jAh-yRk&callback=initMap`;\n      script.async = true;\n      script.defer = true; // Add defer attribute for better script loading\n      document.head.appendChild(script);\n    },\n    initMap() {\n      let lati = this.lat;\n      let lngi = this.lng;\n      if (window.google) {\n        console.log(\"lati: \", lati);\n        console.log(\"lngi: \", lngi);\n        this.map = new window.google.maps.Map(document.getElementById('map'), {\n          center: {\n            lat: lati,\n            lng: lngi\n          },\n          // Toronto coordinates\n          zoom: 14\n        });\n\n        // Create a marker and set its position\n        this.marker = new window.google.maps.Marker({\n          position: {\n            lat: lati,\n            lng: lngi\n          },\n          // Toronto coordinates\n          map: this.map,\n          title: 'Toronto' // Optional title for the marker\n        });\n      } else {\n        console.error('Google Maps API failed to load.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","name","data","lat","lng","mounted","response","get","$route","params","game","headers","console","log","window","google","loadMap","initMap","error","methods","bind","script","document","createElement","src","async","defer","head","appendChild","lati","lngi","map","maps","Map","getElementById","center","zoom","marker","Marker","position","title"],"sources":["C:\\Users\\owenc\\OneDrive\\Desktop\\owen\\frontend\\src\\views\\EventDetailView.vue"],"sourcesContent":["<template>\r\n    <div class=\"home\">\r\n        <div class=\"section\">\r\n            <h1 class=\"title\">Location</h1>\r\n        </div>\r\n        <div id=\"map\" style=\"height: 500px; width: 90%; margin: 5%\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nconst API_URL = 'http://localhost:3000';\r\n\r\n\r\nexport default {\r\n    name: 'EventDetailView',\r\n    data() {\r\n        return { lat: 43.6532, lng: -79.3832 }\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/event/${this.$route.params.game}/`, {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            });\r\n            console.log(\"response:\", response);\r\n            this.lat = response.data[0][\"latitude\"];\r\n            this.lng = response.data[0][\"longitude\"];\r\n            if (!window.google) {\r\n                console.log(\"loding map\");\r\n                this.loadMap();\r\n            } else {\r\n                // console.log(\"jh test: \", response.data[0], lat);\r\n                console.log(\"init maps\");\r\n                this.initMap();\r\n            }\r\n            \r\n\r\n        } catch (error) {\r\n            console.error('Error fetching games:', error);\r\n        }\r\n    },\r\n    methods: {\r\n        loadMap() {\r\n            window.initMap = this.initMap.bind(this);\r\n            const script = document.createElement('script');\r\n            script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyC1J8rbjY3B-Y-dzoWU7jl6hAW4jAh-yRk&callback=initMap`;\r\n            script.async = true;\r\n            script.defer = true; // Add defer attribute for better script loading\r\n            document.head.appendChild(script);\r\n        },\r\n        initMap() {\r\n            let lati = this.lat;\r\n            let lngi = this.lng;\r\n            if (window.google) {\r\n                console.log(\"lati: \", lati);\r\n                console.log(\"lngi: \", lngi);\r\n                this.map = new window.google.maps.Map(document.getElementById('map'), {\r\n                    center: { lat: lati, lng: lngi }, // Toronto coordinates\r\n                    zoom: 14,\r\n                });\r\n\r\n                // Create a marker and set its position\r\n                this.marker = new window.google.maps.Marker({\r\n                    position: { lat: lati, lng: lngi }, // Toronto coordinates\r\n                    map: this.map,\r\n                    title: 'Toronto', // Optional title for the marker\r\n                });\r\n            } else {\r\n                console.error('Google Maps API failed to load.');\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAUA,OAAOA,KAAI,MAAO,OAAO;AACzB,MAAMC,OAAM,GAAI,uBAAuB;AAGvC,eAAe;EACXC,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MAAEC,GAAG,EAAE,OAAO;MAAEC,GAAG,EAAE,CAAC;IAAQ;EACzC,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,IAAI;MACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,OAAQ,UAAS,IAAI,CAACQ,MAAM,CAACC,MAAM,CAACC,IAAK,GAAE,EAAE;QAC7EC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEP,QAAQ,CAAC;MAClC,IAAI,CAACH,GAAE,GAAIG,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;MACvC,IAAI,CAACE,GAAE,GAAIE,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;MACxC,IAAI,CAACY,MAAM,CAACC,MAAM,EAAE;QAChBH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,IAAI,CAACG,OAAO,CAAC,CAAC;MAClB,OAAO;QACH;QACAJ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAI,CAACI,OAAO,CAAC,CAAC;MAClB;IAGJ,EAAE,OAAOC,KAAK,EAAE;MACZN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EACDC,OAAO,EAAE;IACLH,OAAOA,CAAA,EAAG;MACNF,MAAM,CAACG,OAAM,GAAI,IAAI,CAACA,OAAO,CAACG,IAAI,CAAC,IAAI,CAAC;MACxC,MAAMC,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAE,GAAK,sGAAqG;MACnHH,MAAM,CAACI,KAAI,GAAI,IAAI;MACnBJ,MAAM,CAACK,KAAI,GAAI,IAAI,EAAE;MACrBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IACrC,CAAC;IACDJ,OAAOA,CAAA,EAAG;MACN,IAAIY,IAAG,GAAI,IAAI,CAAC1B,GAAG;MACnB,IAAI2B,IAAG,GAAI,IAAI,CAAC1B,GAAG;MACnB,IAAIU,MAAM,CAACC,MAAM,EAAE;QACfH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEgB,IAAI,CAAC;QAC3BjB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEiB,IAAI,CAAC;QAC3B,IAAI,CAACC,GAAE,GAAI,IAAIjB,MAAM,CAACC,MAAM,CAACiB,IAAI,CAACC,GAAG,CAACX,QAAQ,CAACY,cAAc,CAAC,KAAK,CAAC,EAAE;UAClEC,MAAM,EAAE;YAAEhC,GAAG,EAAE0B,IAAI;YAAEzB,GAAG,EAAE0B;UAAK,CAAC;UAAE;UAClCM,IAAI,EAAE;QACV,CAAC,CAAC;;QAEF;QACA,IAAI,CAACC,MAAK,GAAI,IAAIvB,MAAM,CAACC,MAAM,CAACiB,IAAI,CAACM,MAAM,CAAC;UACxCC,QAAQ,EAAE;YAAEpC,GAAG,EAAE0B,IAAI;YAAEzB,GAAG,EAAE0B;UAAK,CAAC;UAAE;UACpCC,GAAG,EAAE,IAAI,CAACA,GAAG;UACbS,KAAK,EAAE,SAAS,CAAE;QACtB,CAAC,CAAC;MACN,OAAO;QACH5B,OAAO,CAACM,KAAK,CAAC,iCAAiC,CAAC;MACpD;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}