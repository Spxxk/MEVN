{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios, { HttpStatusCode } from 'axios';\nconst API_URL = 'http://localhost:3000';\nexport default {\n  name: 'EditEvent',\n  data() {\n    return {\n      eventData: {\n        type: '',\n        location: '',\n        longitude: null,\n        latitude: null,\n        date: '',\n        description: '',\n        game: '',\n        team1: '',\n        team2: '',\n        league: ''\n      },\n      options: ['Game', 'Practice']\n    };\n  },\n  async mounted() {\n    this.fetchLeagues();\n    try {\n      const response = await axios.get(`${API_URL}/event/${this.$route.params.game}/`, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log(\"response:\", response);\n      this.eventData = response.data[0]; // Assign response data directly to eventData\n    } catch (error) {\n      console.error('Error fetching event data:', error);\n    }\n  },\n  computed: {\n    formattedDate() {\n      return this.eventData.date ? new Date(this.eventData.date).toISOString().split('T')[0] : '';\n    }\n  },\n  methods: {\n    async fetchLeagues() {\n      try {\n        const response = await axios.get(`${API_URL}/league/all`);\n        this.leagues = response.data; // Assuming response.data is an array of league objects\n      } catch (error) {\n        console.error('Error fetching leagues:', error);\n      }\n    },\n    async submitForm() {\n      try {\n        axios.defaults.withCredentials = true;\n        console.log(this.eventData);\n        const response = await axios.put(`${API_URL}/event/${this.eventData.game}`, this.eventData);\n        console.log(response);\n        this.$router.push('/');\n        if (response.status === HttpStatusCode.Ok && response.data === 'Welcome User to the dashboard!') {\n          alert('Not signed in!');\n        } else {\n          alert('Event edit successfully!');\n        }\n      } catch (error) {\n        console.error('There was an error creating the event:', error);\n        alert('Failed to create event.');\n      }\n    },\n    isLoggedIn() {\n      // Access the isLoggedIn state from Vuex store or local component state\n      return this.$store.state.user.isLoggedIn; // Example for Vuex\n    },\n    username() {\n      // Optionally, you can display the username if available\n      return this.$store.state.user.username; // Example for Vuex\n    }\n  }\n};","map":{"version":3,"names":["axios","HttpStatusCode","API_URL","name","data","eventData","type","location","longitude","latitude","date","description","game","team1","team2","league","options","mounted","fetchLeagues","response","get","$route","params","headers","console","log","error","computed","formattedDate","Date","toISOString","split","methods","leagues","submitForm","defaults","withCredentials","put","$router","push","status","Ok","alert","isLoggedIn","$store","state","user","username"],"sources":["C:\\Users\\jason\\Desktop\\owen\\frontend\\src\\views\\EditEvent.vue"],"sourcesContent":["<template>\r\n    <div class=\"section is-flex is-justify-content-center\">\r\n        <h1 class=\"title\">Edit Event</h1>\r\n    </div>\r\n    <div class=\"create-event card\" style=\"padding-bottom: 40px\">\r\n        <form @submit.prevent=\"submitForm\">\r\n            <header class=\"card-header has-background-danger\">\r\n                <strong style=\"padding: 10px; color: black\">Edit</strong>\r\n            </header>\r\n            <div>\r\n                <label for=\"game\">Event name</label>\r\n                <input type=\"text\" id=\"game\" v-model=\"eventData.game\" :placeholder=\"eventData.game\" readonly>\r\n            </div>\r\n            <div>\r\n                <label for=\"type\">Event Type</label>\r\n                <div class=\"control\">\r\n                    <div class=\"select is-fullwidth\">\r\n                        <select id=\"type\" v-model=\"eventData.type\" required>\r\n                            <option v-for=\"option in options\" :key=\"option\" :value=\"option\">{{ option }}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label for=\"location\" style=\"padding-top: 10px\">Location</label>\r\n                <input type=\"text\" id=\"location\" v-model=\"eventData.location\" :placeholder=\"eventData.location\"\r\n                    required>\r\n            </div>\r\n            <div>\r\n                <label for=\"latitude\">Latitude</label>\r\n                <input type=\"number\" id=\"latitude\" step=\"0.0001\" v-model.number=\"eventData.latitude\"\r\n                    :placeholder=\"eventData.latitude\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"longitude\">Longitude</label>\r\n                <input type=\"number\" id=\"longitude\" step=\"0.0001\" v-model.number=\"eventData.longitude\"\r\n                    :placeholder=\"eventData.longitude\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" v-model=\"eventData.date\" :placeholder=\"formattedDate\">\r\n            </div>\r\n            <div>\r\n                <label for=\"description\">Description</label>\r\n                <textarea id=\"description\" v-model=\"eventData.description\"\r\n                    :placeholder=\"eventData.description\"></textarea>\r\n            </div>\r\n            <div>\r\n                <label for=\"team1\">Team 1</label>\r\n                <input type=\"text\" id=\"team1\" v-model=\"eventData.team1\" :placeholder=\"eventData.team1\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"team2\">Team 2</label>\r\n                <input type=\"text\" id=\"team2\" v-model=\"eventData.team2\" :placeholder=\"eventData.team2\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"league\" class=\"label\">League</label>\r\n                <div class=\"control\">\r\n                    <div class=\"select is-fullwidth\">\r\n                        <select id=\"league\" v-model=\"eventData.league\" required>\r\n                            <option v-for=\"league in leagues\" :key=\"league.name\" :value=\"league.name\">{{ league.name }}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            <button type=\"submit\" class=\"button is-primary\">Edit Event</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios, { HttpStatusCode } from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000';\r\n\r\nexport default {\r\n    name: 'EditEvent',\r\n    data() {\r\n        return {\r\n            eventData: {\r\n                type: '',\r\n                location: '',\r\n                longitude: null,\r\n                latitude: null,\r\n                date: '',\r\n                description: '',\r\n                game: '',\r\n                team1: '',\r\n                team2: '',\r\n                league: '',\r\n            },\r\n            options: ['Game', 'Practice'],\r\n        };\r\n    },\r\n    async mounted() {\r\n        this.fetchLeagues();\r\n        try {\r\n            const response = await axios.get(`${API_URL}/event/${this.$route.params.game}/`, {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            });\r\n            console.log(\"response:\", response);\r\n            this.eventData = response.data[0]; // Assign response data directly to eventData\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching event data:', error);\r\n        }\r\n    },\r\n    computed: {\r\n        formattedDate() {\r\n            return this.eventData.date ? new Date(this.eventData.date).toISOString().split('T')[0] : '';\r\n        }\r\n    },\r\n    methods: {\r\n        async fetchLeagues() {\r\n            try {\r\n                const response = await axios.get(`${API_URL}/league/all`);\r\n                this.leagues = response.data; // Assuming response.data is an array of league objects\r\n            } catch (error) {\r\n                console.error('Error fetching leagues:', error);\r\n            }\r\n        },\r\n        async submitForm() {\r\n            try {\r\n                axios.defaults.withCredentials = true;\r\n                console.log(this.eventData);\r\n                const response = await axios.put(`${API_URL}/event/${this.eventData.game}`, this.eventData);\r\n                console.log(response);\r\n                this.$router.push('/');\r\n                if (response.status === HttpStatusCode.Ok && response.data === 'Welcome User to the dashboard!') {\r\n                    alert('Not signed in!');\r\n                } else {\r\n                    alert('Event edit successfully!');\r\n                }\r\n            } catch (error) {\r\n                console.error('There was an error creating the event:', error);\r\n                alert('Failed to create event.');\r\n            }\r\n        },\r\n        isLoggedIn() {\r\n\r\n            // Access the isLoggedIn state from Vuex store or local component state\r\n            return this.$store.state.user.isLoggedIn; // Example for Vuex\r\n        },\r\n        username() {\r\n            // Optionally, you can display the username if available\r\n            return this.$store.state.user.username; // Example for Vuex\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-event {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.create-event h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nform {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\nform>div {\r\n    margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"number\"],\r\ninput[type=\"date\"],\r\ntextarea {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n    height: 100px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}